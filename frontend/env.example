# ============================================================================
# CodeDocs AI - Frontend Environment Configuration
# ============================================================================
#
# SETUP INSTRUCTIONS:
# 1. Copy this file to .env.local:
#    cp env.example .env.local
#
# 2. Fill in the required values below
#
# 3. Never commit .env.local to version control (it's in .gitignore)
#
# 4. For production deployment on Vercel:
#    - Go to Project Settings â†’ Environment Variables
#    - Add NEXT_PUBLIC_API_URL with your backend URL
#
# ============================================================================

# ----------------------------------------------------------------------------
# BACKEND API URL (Required)
# ----------------------------------------------------------------------------
# The URL where your Flask backend API is running
#
# DEVELOPMENT:
#   Use http://localhost:5000/api for local development
#
# PRODUCTION:
#   Use your deployed backend URL (e.g., AWS EC2 with Elastic IP)
#   Example: https://api.codedocs-ai.com/api
#   or http://YOUR_EC2_IP:5000/api
#
# IMPORTANT: This variable MUST start with NEXT_PUBLIC_ to be accessible
# in the browser. Next.js only exposes variables with this prefix to the client.
# ----------------------------------------------------------------------------

NEXT_PUBLIC_API_URL=http://localhost:5000/api


# ============================================================================
# NOTES:
# ============================================================================
#
# 1. Environment Variable Naming:
#    - Variables starting with NEXT_PUBLIC_ are exposed to the browser
#    - Other variables are only available server-side
#    - For this app, we only need NEXT_PUBLIC_API_URL
#
# 2. Local Development:
#    - Make sure your backend is running on the same URL specified above
#    - Default backend runs on http://localhost:5000
#
# 3. CORS Configuration:
#    - Ensure your backend's CORS settings allow requests from your frontend URL
#    - Backend should have http://localhost:3000 in FRONTEND_URL for dev
#
# 4. Production Deployment:
#    - Update NEXT_PUBLIC_API_URL to your production backend URL
#    - Use HTTPS in production for security
#    - Consider using environment-specific URLs:
#      * Development: http://localhost:5000/api
#      * Staging: https://staging-api.example.com/api
#      * Production: https://api.example.com/api
#
# 5. Vercel Deployment:
#    - Vercel automatically uses .env.local for local development
#    - Set environment variables in Vercel dashboard for deployments
#    - You can have different values for Preview and Production environments
#
# 6. Testing the Connection:
#    - After starting the frontend, check the browser console
#    - API calls should go to the URL specified above
#    - If you see CORS errors, check backend CORS configuration
#
# ============================================================================
# END OF CONFIGURATION
# ============================================================================

